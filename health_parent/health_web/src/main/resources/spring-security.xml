<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">
    <!--   静态资源不拦截(css, img, js..., login.html)-->
    <security:http pattern="/css/**" security="none"/>
    <security:http pattern="/img/**" security="none"/>
    <security:http pattern="/js/**" security="none"/>
    <security:http pattern="/plugins/**" security="none"/>
    <security:http pattern="/login.html" security="none"/>
    <security:http pattern="/user/loginFail.do" security="none"/>

    <security:http auto-config="true" use-expressions="true">
        <security:intercept-url pattern="/**" access="isAuthenticated()"/>
        <security:form-login  login-page="/login.html"
                              login-processing-url="/login.do"
                              authentication-failure-url="/user/loginFail.do"
                              username-parameter="username"
                              password-parameter="password"
                              default-target-url="/user/loginSuccess.do"
                              always-use-default-target="true"/>
        <security:headers>
            <!--   frame-options 控制页面中嵌套frame（访问其它页面，把其它页面的内容展示在这个页面上)
                     policy 使用的策略:
                         DENY: 不允许访问
                         SAMEORIGIN: 同域可以访问
                         ALLOW-FROM: 指定url可以访问
             -->
            <security:frame-options policy="SAMEORIGIN"/>
        </security:headers>
        <!--关闭csrf-->
        <security:csrf disabled="true"/>
        <security:logout logout-url="/logout.do" logout-success-url="/login.html" invalidate-session="true"/>
    </security:http>
    <!--
  认证信息
      认证管理器
         提供者 user-service-ref  springSecurityUserService implements UserDetailsService
         配置加密器
    -->
    <security:authentication-manager>
        <security:authentication-provider user-service-ref="springSecurityUserService">
          <security:password-encoder ref="encoder"/>
        </security:authentication-provider>

    </security:authentication-manager>

    <bean id="encoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>
    <!--开启注解支持-->
    <security:global-method-security pre-post-annotations="enabled"/>
</beans>
